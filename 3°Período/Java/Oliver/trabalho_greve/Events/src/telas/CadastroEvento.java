/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package telas;

import conexoes.EventoDAO;
import conexoes.LocalDAO;
import conexoes.PalestranteDAO;
import entidades.Evento;
import entidades.Local;
import entidades.Palestrante;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Geri
 */
public class CadastroEvento extends javax.swing.JDialog {
// vetor din?mico para clientes
    EventoDAO con = new EventoDAO(); 
    List<Evento> evento = new ArrayList();
    Evento eventoaux;
    
    PalestranteDAO conPalestrante = new PalestranteDAO();
    List<Palestrante> palestrantes = conPalestrante.listar();
    
    LocalDAO conLocal = new LocalDAO();
    List<Local> locais = conLocal.listar();
    // vari?vel para saber se ? para adicionar um novo registro ou para alterar
    // o registro corrente
    boolean novo = false;
    // vari?vel para saber qual o ?ndice do registro que est? sendo editado no
    // momento
    int i = -1;

    /**
     * Creates new form CadastroEvento
     * @param parent
     * @param modal
     */
    public CadastroEvento(java.awt.Frame parent,
            boolean modal) {
        super(parent, modal);
        initComponents();
        // informa como devem estar os bot?es no in?cio do processo
        ativaInicio();
        evento = con.listar();
        if (!evento.isEmpty()) {
            i = 0;
            carregaDados();
            ativaNavegacao();
        }
        carregaCombos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfTitulo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        spMaxParticipantes = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ffDataEvento = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbPalestrante = new javax.swing.JComboBox<>();
        cbLocal = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        btPrimeiro = new javax.swing.JButton();
        btAnterior = new javax.swing.JButton();
        btProximo = new javax.swing.JButton();
        btUltimo = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar Evento");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados do Evento"));

        jLabel1.setText("Título:");

        jLabel2.setText("Descrição:");

        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);
        jScrollPane1.setViewportView(txtDescricao);

        jLabel6.setText("Máx. Participantes");

        jLabel3.setText("Data do evento:");

        try {
            ffDataEvento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ffDataEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ffDataEventoActionPerformed(evt);
            }
        });

        jLabel4.setText("Palestrante:");

        jLabel5.setText("Local:");

        cbPalestrante.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "(Selecione)" }));

        cbLocal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "(Selecione)" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tfTitulo, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(ffDataEvento, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(spMaxParticipantes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                    .addComponent(cbLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPalestrante, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(spMaxParticipantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ffDataEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbPalestrante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setLayout(new java.awt.GridLayout(2, 4));

        btPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/resultset_first.png"))); // NOI18N
        btPrimeiro.setToolTipText("Primeiro registro");
        btPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPrimeiroActionPerformed(evt);
            }
        });
        jPanel2.add(btPrimeiro);

        btAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/resultset_previous.png"))); // NOI18N
        btAnterior.setToolTipText("Registro anterior");
        btAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnteriorActionPerformed(evt);
            }
        });
        jPanel2.add(btAnterior);

        btProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/resultset_next.png"))); // NOI18N
        btProximo.setToolTipText("Próximo registro");
        btProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProximoActionPerformed(evt);
            }
        });
        jPanel2.add(btProximo);

        btUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/resultset_last.png"))); // NOI18N
        btUltimo.setToolTipText("Último registro");
        btUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUltimoActionPerformed(evt);
            }
        });
        jPanel2.add(btUltimo);

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/brick_delete.png"))); // NOI18N
        btExcluir.setToolTipText("Excluir registro");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });
        jPanel2.add(btExcluir);

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/brick_add.png"))); // NOI18N
        btNovo.setToolTipText("Novo registro");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });
        jPanel2.add(btNovo);

        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/brick_go.png"))); // NOI18N
        btSalvar.setToolTipText("Salvar registro");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        jPanel2.add(btSalvar);

        btSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/door_in.png"))); // NOI18N
        btSair.setToolTipText("Sair do Sistema");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });
        jPanel2.add(btSair);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(416, 432));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        // TODO add your handling code here:
        // Fecha o JDialog
        dispose();
    }//GEN-LAST:event_btSairActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
        String titulo = tfTitulo.getText();
        String descricao = txtDescricao.getText();
        int maxParticipantes = ((Number) spMaxParticipantes.getValue()).intValue();
        
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        String data = ffDataEvento.getText();
        Date dataFormatada = new Date();
        
        try {
            dataFormatada = format.parse(data);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        
        String palestranteSelecionado = (String) cbPalestrante.getSelectedItem();
        int idPalestrante = Integer.parseInt(palestranteSelecionado.split(" - ")[0]);
        Palestrante palestrante = conPalestrante.buscarPorCodigo(idPalestrante);
        
        String localSelecionado = (String) cbLocal.getSelectedItem();
        int idLocal = Integer.parseInt(localSelecionado.split(" - ")[0]);
        Local local = conLocal.buscarPorCodigo(idLocal);
        
        eventoaux = new Evento(titulo, descricao, maxParticipantes, dataFormatada, palestrante, local);
        // adicionando o objeto ao vetor din?mico de clientes
        if (novo) {
            con.inserir(eventoaux);
            evento.add(eventoaux);
            i = evento.size() - 1;
        } else {
            // altera os dados da posi??o armazenada em i
            con.alterar(eventoaux);
            evento.set(i, eventoaux);
        }
        novo = false;
        ativaNavegacao();
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        // TODO add your handling code here:
        limpaCampos();
        novo = true;
        ativaEdicao();
        // manda o curso ficar no campo c?digo
        tfTitulo.requestFocus();
    }//GEN-LAST:event_btNovoActionPerformed

    private void btPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPrimeiroActionPerformed
        // TODO add your handling code here:
        // testa se j? h? registros inclu?dos
        if ((!evento.isEmpty()) && (i > 0)) {
            i = 0; // vai para o primeiro registro
            carregaDados();
            carregaCombos();
        } else {
            JOptionPane.showMessageDialog(this, "Ja esta no primeiro registro");
        }
    }//GEN-LAST:event_btPrimeiroActionPerformed

    private void btAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnteriorActionPerformed
        // TODO add your handling code here:
        // testa se tem registros e se ainda n?o est? no primeiro registro
        if ((!evento.isEmpty()) && (i > 0)) {
            i--; // vai para o registro anterior
            carregaDados();
            carregaCombos();
        } else {
            JOptionPane.showMessageDialog(this, "J? est? no primeiro registro");
        }
    }//GEN-LAST:event_btAnteriorActionPerformed

    private void btProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProximoActionPerformed
        // TODO add your handling code here:
        // testa se tem registros e se n?o est? no ?ltimo registro
        if ((!evento.isEmpty()) && (i < evento.size() - 1)) {
            i++; // vai para o pr?ximo registro
            carregaDados();
            carregaCombos();
        } else {
            JOptionPane.showMessageDialog(this, "J? est? no ?ltimo registro");
        }
    }//GEN-LAST:event_btProximoActionPerformed

    private void btUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUltimoActionPerformed
        // TODO add your handling code here:
        if ((!evento.isEmpty()) && (i < evento.size() - 1)) {
            i = evento.size() - 1; // vai para o ?ltimo registro
            carregaDados();
            carregaCombos();
        } else {
            JOptionPane.showMessageDialog(this, "J? est? no ?ltimo registro");
        }
    }//GEN-LAST:event_btUltimoActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // TODO add your handling code here:
        // testa se h? registros
        if (i >= 0) {
            // remove o registro corrente
            con.remover(evento.get(i).getId());
            evento.remove(i);
            // testa se ainda h? registros
            if (!evento.isEmpty()) {
                // volta para o primeiro registro
                i = 0;
                // carrega os dados do primeiro registro
                carregaDados();
                carregaCombos();
            } else {
                JOptionPane.showMessageDialog(this, "N?o h? mais registros");
                // limpa os dados da tela
                limpaCampos();
                // ativa o formato de bot?es de in?cio
                ativaInicio();
            }
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void ffDataEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ffDataEventoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ffDataEventoActionPerformed

    // m?todo para carregar os dados do vetor din?mico para a tela
    private void carregaDados() {
        // os dados ser?o carregados da posi??o corrente, ou seja, do valor
        // armazenado em i
        eventoaux = evento.get(i); // recupera o cliente armazenado em i
        tfTitulo.setText(eventoaux.getTitulo());
        txtDescricao.setText(eventoaux.getDescricao());
        spMaxParticipantes.setValue(eventoaux.getMaxParticipantes());
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String dataFormatada = dateFormat.format(eventoaux.getDataEvento());
        ffDataEvento.setText(dataFormatada);
    }
    
    private void carregaCombos() {
        DefaultComboBoxModel<String> modelPale = new DefaultComboBoxModel<>();
        DefaultComboBoxModel<String> modelLocal = new DefaultComboBoxModel<>();

        modelPale.addElement("(Selecione)");
        modelLocal.addElement("(Selecione)");

        for (Palestrante palestrante : palestrantes) {
            String item = palestrante.getId() + " - " + palestrante.getNome();
            modelPale.addElement(item);
        }

        for (Local local : locais) {
            String item = local.getId() + " - " + local.getNome();
            modelLocal.addElement(item);
        }

        cbPalestrante.setModel(modelPale);
        cbLocal.setModel(modelLocal);
    
        if (!evento.isEmpty()) {
            eventoaux = evento.get(i);
            int idPalestranteEvento = eventoaux.getPalestrante().getId();
            int idLocalEvento = eventoaux.getLocal().getId();

            for (int j = 0; j < modelPale.getSize(); j++) {
                String item = modelPale.getElementAt(j);
                
                if (item.equals("(Selecione)")) {
                    continue;
                }

                int idPalestranteAtual = Integer.parseInt(item.split(" - ")[0]);

                if (idPalestranteEvento == idPalestranteAtual) {
                    cbPalestrante.setSelectedIndex(j);
                    break;
                }
            }
            
            for (int j = 0; j < modelPale.getSize(); j++) {
                String item = modelLocal.getElementAt(j);
                
                if (item.equals("(Selecione)")) {
                    continue;
                }

                int idEventoAtual = Integer.parseInt(item.split(" - ")[0]);

                if (idLocalEvento == idEventoAtual) {
                    cbLocal.setSelectedIndex(j);
                    break;
                }
            }
        }
    }

    // m?todo para ativar apenas os bot?es que podem ser utilizados quando um
    // novo registro est? sendo editado
    public void ativaEdicao() {
        btPrimeiro.setEnabled(false);
        btAnterior.setEnabled(false);
        btProximo.setEnabled(false);
        btUltimo.setEnabled(false);
        btExcluir.setEnabled(false);
        btNovo.setEnabled(false);
        btSalvar.setEnabled(true);
    }
    // m?todo para ativar os bot?es para navega??o novamente

    public void ativaNavegacao() {
        btPrimeiro.setEnabled(true);
        btAnterior.setEnabled(true);
        btProximo.setEnabled(true);
        btUltimo.setEnabled(true);
        btExcluir.setEnabled(true);
        btNovo.setEnabled(true);
        btSalvar.setEnabled(true);
    }
    // m?todo para ativar os bot?es quando o processo est? iniciando

    public void ativaInicio() {
        btPrimeiro.setEnabled(false);
        btAnterior.setEnabled(false);
        btProximo.setEnabled(false);
        btUltimo.setEnabled(false);
        btExcluir.setEnabled(false);
        btNovo.setEnabled(true);
        btSalvar.setEnabled(false);
    }

    // m?todo para limpar os campos do formul?rio
    private void limpaCampos() {
        tfTitulo.setText("");
        tfTitulo.setText("");
        txtDescricao.setText("");
        spMaxParticipantes.setValue(0);
        ffDataEvento.setText("");
        cbPalestrante.setSelectedIndex(0);
        cbLocal.setSelectedIndex(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                CadastroEvento dialog = new CadastroEvento(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnterior;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btPrimeiro;
    private javax.swing.JButton btProximo;
    private javax.swing.JButton btSair;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btUltimo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbLocal;
    private javax.swing.JComboBox<String> cbPalestrante;
    private javax.swing.JFormattedTextField ffDataEvento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spMaxParticipantes;
    private javax.swing.JTextField tfTitulo;
    private javax.swing.JTextArea txtDescricao;
    // End of variables declaration//GEN-END:variables

}
